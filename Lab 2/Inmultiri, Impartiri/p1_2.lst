     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 05                          a db 5
    14 00000001 03                          b db 3
    15 00000002 0A                          c db 10
    16 00000003 0700                        d dw 7
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ;d*(d+2*a)/(b*c)
    22                                          
    23 00000000 B800000000                      mov eax, 0
    24 00000005 BA00000000                      mov edx, 0
    25                                          
    26 0000000A A0[00000000]                    mov al, [a]
    27 0000000F B202                            mov dl, 2
    28 00000011 F6E2                            mul dl ; AL = AL * 2 = 10 (A) 
    29                                          
    30 00000013 0205[03000000]                  add al, [d] ; AL = d+2*a = 17 (11)
    31 00000019 BB00000000                      mov ebx, 0 
    32 0000001E 88C3                            mov bl, al ; Mutam in BL rezultatul din AL = d+2*a
    33                                          
    34 00000020 A0[01000000]                    mov al, [b] ; AL = 3
    35 00000025 F625[02000000]                  mul byte[c] ; AL = b*c = 30 (1E)
    36                                          
    37 0000002B 88C2                            mov dl, al ; Mutam in DL rezultatul din AL = b*c = 30(1E)
    38                                          
    39 0000002D A0[03000000]                    mov al, [d]
    40 00000032 F6E3                            mul bl ;AX = d*(d+2*a) = 119(77)
    41 00000034 F6F2                            div dl
    42                                          
    43 00000036 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    44 00000038 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
